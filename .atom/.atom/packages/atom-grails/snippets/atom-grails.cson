'.text.html.grails':
  '<g:checkBox>':
    'prefix': 'input'
    'body': '<g:checkBox name="${1:name}" value="${2:true}" />'
  '<g:createLink>':
    'prefix': 'createlink'
    'body': '<g:createLink ${1:action="$2" }${3:controller="$4" }${5:id="$6" }${7:params="$8" }${9:url="$10" }${11:absolute="$12" }${13:base="$14" }>$15</g:createLink>'
  '<g:createLinkTo>':
    'prefix': 'createlinkto'
    'body': '<g:createLinkTo ${1:dir="$2" }${3:file="$4" }${5:absolute="$6" }${7:base="$8" } />'
  '<g:currencySelect ..>':
    'prefix': 'select'
    'body': '<g:currencySelect name="${1:currencyName}" value="\\${${2:currency}}" />'
  '<g:each in=".." var="e" status="i">':
    'prefix': 'eavs'
    'body': '<g:each in="\\${${1:item}}" var="${2:e}" status="${3:i}">\n\t${0:$TM_SELECTED_TEXT}\n</g:each>'
  '<g:each in=".." var="i">':
    'prefix': 'eav'
    'body': '<g:each in="\\${${1:item}}" var="${2:i}">\n\t${0:$TM_SELECTED_TEXT}\n</g:each>'
  '<g:each in="..">':
    'prefix': 'ea'
    'body': '<g:each in="\\${${1:item}}">\n\t${0:$TM_SELECTED_TEXT}\n</g:each>'
  '<g:each>':
    'prefix': 'each'
    'body': '<g:each ${1:var="${2}" }in="\\${$3}">\n\t${0:$TM_SELECTED_TEXT}\n</g:each>'
  '<g:else>':
    'prefix': 'else'
    'body': '<g:else>\n\t${0:$TM_SELECTED_TEXT}\n</g:else>'
  '<g:elseif>':
    'prefix': 'elseif'
    'body': '<g:elseif test="\\${$1}">\n\t${0:$TM_SELECTED_TEXT}\n</g:elseif>'
  '<g:field type="..">':
    'prefix': 'input'
    'body': '<g:field type="${1:type}" name="${2:name}" value="${3:someValue}" />'
  '<g:form action="..">':
    'prefix': 'form'
    'body': '<g:form name="${1:name}" action="${2:action}">\n\t${0:$TM_SELECTED_TEXT}\n</g:form>'
  '<g:form controller=".." action=".."> ':
    'prefix': 'form'
    'body': '<g:form name="${1:name}" controller="${2:controller}" action="${3:action}">\n\t${0:$TM_SELECTED_TEXT}\n</g:form>'
  '<g:hasErrors>':
    'prefix': 'haserrors'
    'body': '<g:hasErrors ${1:bean="$2" }${3:model="$4" }${5:field="$6" }>\n\t$0\n</g:hasErrors>\n'
  '<g:hiddenField>':
    'prefix': 'input'
    'body': '<g:hiddenField name="${1:name}" value="${2:someValue}" />'
  '<g:if>':
    'prefix': 'if'
    'body': '<g:if test="\\${$1}">\n\t${0:$TM_SELECTED_TEXT}\n</g:if>\n'
  '<g:javascript library="..">':
    'prefix': 'jsl'
    'body': '<g:javascript library="${1:prototype}" />'
  '<g:javascript>':
    'prefix': 'js'
    'body': '<g:javascript>\n\t${0:$TM_SELECTED_TEXT}\n</g:javascript>'
  '<g:link>':
    'prefix': 'link'
    'body': '<g:link ${1:action="$2" }${3:controller="$4" }${5:id="$6" }${7:params="$8" }${9:url="$10" }${11:absolute="$12" }${13:base="$14" }>$15</g:link>'
  '<g:localeSelect ..>':
    'prefix': 'select'
    'body': '<g:localeSelect name="${1:localeName}" value="\\${${2:request.locale}}" />'
  '<g:message>':
    'prefix': 'msg'
    'body': '<g:message code="${1}"${2: args="${3}"}${4: default="${5}"}/>$0'
  '<g:radio> ':
    'prefix': 'input'
    'body': '<g:radio name="${1:name}" value="${2:true}" checked="${3:true}" />'
  '<g:render>':
    'prefix': 'render'
    'body': '<g:render ${1:template="$2" }${3:bean="$4" }${5:model="$6" }${7:collection="$8" }${9:var="$10" }${11:plugin="$12" }/>'
  '<g:select from=".." >':
    'prefix': 'select'
    'body': '<g:select name="${1:name}" value="\\${${2:value}}" from="\\${${3:[1,2,3]}}" />'
  '<g:set>':
    'prefix': 'set'
    'body': '<g:set ${1:var="$2" }${3:value="$4" }${5:scope="${6:request/page/flash/session}" }/>'
  '<g:submitButton>':
    'prefix': 'input'
    'body': '<g:submitButton name="${1:name}" value="${2:someValue}" />'
  '<g:textField>':
    'prefix': 'input'
    'body': '<g:textField name="${1:name}" value="${2:someValue}" />'
  '<g:timeZoneSelect ..>':
    'prefix': 'select'
    'body': '<g:timeZoneSelect name="${1:selectName}" value="\\${${2:tz}}" />'
  '<g:while>':
    'prefix': 'while'
    'body': '<g:while test="\\${$1}">\n\t${0:$TM_SELECTED_TEXT}\n</g:while>\n'
  'New short tag.. <g: />':
    'prefix': 'g:>'
    'body': '<g:${1:name} ${2:attr}="${3:value}" />'
  'New tag.. <g: ></g:>':
    'prefix': 'g:'
    'body': '<g:${1:name} ${2:attr}="${3:value}">${0:$TM_SELECTED_TEXT}</g:$1>'
  'out << ""':
    'prefix': 'out'
    'body': 'out << "${1:output}"'
'.source.groovy':
  'New Controller':
    'prefix': 'cont'
    'body': 'class ${1:Name}Controller {\n\tdef index = {\n\t\t $0\n\t}\n}'
  'New Tag':
    'prefix': 'tag'
    'body': 'def ${1:closureName} =  { attrs, body ->\n\t$0\n}'
  'New Tag Library':
    'prefix': 'taglib'
    'body': 'class ${1:Name}TagLib {\n\t$0\n}'
  'New Unit Test':
    'prefix': 'unit'
    'body': 'package ${1}\n\t\t\nimport grails.test.*\n\t\t\nclass ${2:Name}Tests extends GrailsUnitTestCase {\n\n\tprotected void setUp() {\n        super.setUp()\n    }\n\n    protected void tearDown() {\n        super.tearDown()\n    }\n\n\tvoid test${3:Something}() {\n\t\t $0\n\t}\n\t\n}'
  'belongsTo':
    'prefix': 'bt'
    'body': 'static belongsTo = [${1:ClassName}]'
  'constraints':
    'prefix': 'constraints'
    'body': 'static constraints = {\n\t$0\n}'
  'hasMany':
    'prefix': 'hm'
    'body': 'static hasMany = [${1:items}:${2:ClassName}]'
  'hasOne':
    'prefix': 'ho'
    'body': 'static hasOne = [${1:item}:${2:ClassName}]'
  'mockConstraints':
    'prefix': 'mc'
    'body': 'mockForConstraintsTests(${1:DomainClass})\ndef test${1} = new ${1}()\nassertFalse test${1}.validate()\nassertEquals "${2:nullable}", test${1}.errors["${3:someproperty}"]'
  'mockDomain':
    'prefix': 'md'
    'body': 'mockDomain(${1:DomainClass}, [\n\tnew ${1}($0)\n])'
  'mockFor':
    'prefix': 'mf'
    'body': 'def ${1:mockControl} = mockFor(${2:ClassName})\n${1}.demand.${3:yourMethod}(${4:1}..${5:1}) = {-&gt;\n\t$0\n}\ndef test${2} = ${1}.createMock()'
  'mockLogging':
    'prefix': 'ml'
    'body': 'mockLogging(${1:ClassName})'
  'mockSession':
    'prefix': 'ms'
    'body': 'mockSession.${1:property} = ${2:value}'
  'namedQueries':
    'prefix': 'nq'
    'body': 'static namedQueries = {\n    ${1:queryName} {\n        $0\n    }\n}'
  'redirect(action:..)':
    'prefix': 'rea'
    'body': 'redirect(action:"${1:name}")'
  'redirect(action:.., id:...)':
    'prefix': 'reai'
    'body': 'redirect(action:"${1:name}",id:${2:1})'
  'redirect(controller:..)':
    'prefix': 'rec'
    'body': 'redirect(controller:"${1:name}")'
  'redirect(controller:.., action:.. , id:..)':
    'prefix': 'recai'
    'body': 'redirect(controller:"${1:c}",action:"${2:a}",id:${3:1})'
  'redirect(controller:.., action:..)':
    'prefix': 'reca'
    'body': 'redirect(controller:"${1:c}",action:"${2:a}")'
  'render(contentType:"text/json") { ... } ':
    'prefix': 'rjson'
    'body': 'render(contentType:"text/json", builder:"json") {\n\t$0\n}'
  'render(contentType:"text/xml") { ... }':
    'prefix': 'rxml'
    'body': 'render(contentType:"text/xml") {\n\t$0\n}'
  'render(template:"..")':
    'prefix': 'rte'
    'body': 'render(template:"${1:name}")'
  'render(template:"..",bean:b)':
    'prefix': 'rteb'
    'body': 'render(template:"${1:name}",bean:${2:b})'
  'render(template:"..",bean:b,var:"x")':
    'prefix': 'rtebv'
    'body': 'render(template:"${1:name}",bean:${2:b}, var:"${3:x}")'
  'render(template:"..",collection:c)':
    'prefix': 'rtec'
    'body': 'render(template:"${1:name}",collection:${1:col})'
  'render(template:"..",collection:c, var:"x")':
    'prefix': 'rtecb'
    'body': 'render(template:"${1:name}",collection:${2:col}, var:"${3:x}")'
  'render(template:"..",model:m) ':
    'prefix': 'rtem'
    'body': 'render(template:"${1:name}",model:[${2:name}:${3:obj}])'
  'render(text:"..")':
    'prefix': 'rt'
    'body': 'render(text:"${1:value}")'
  'render(text:"..", contentType:"..")':
    'prefix': 'rtc'
    'body': 'render(text:"${1:value}", contentType:"${2:text/xml}")'
  'render(view:"..")':
    'prefix': 'rv'
    'body': 'render(view:"${1:name}")'
  'render(view:"..", model:m)':
    'prefix': 'rvm'
    'body': 'render(view:"${1:name}", model:[${2:name}:${3:obj}])'
'.source.groovy.embedded.html.grails':
  'g.message()':
    'prefix': 'msg'
    'body': 'g.message(code:"${1}"${2:, args:${3}}${4:, default:"${5}"})$0'
